"""create organization project account coversation model

Revision ID: a6a2d98fd352
Revises: f7147bd65b46
Create Date: 2024-05-05 03:16:21.744492

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
import sqlmodel # added

from app.schemas.common_schema import IConversationStatusEnum, IStatusEnum, \
    IGenderEnum, ITargetPlatformEnum


# revision identifiers, used by Alembic.
revision = 'a6a2d98fd352'
down_revision = 'f7147bd65b46'
branch_labels = None
depends_on = None


def upgrade():
    op.execute("CREATE EXTENSION IF NOT EXISTS pg_trgm") 
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Account',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('proxy', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('gender', sqlalchemy_utils.types.choice.ChoiceType(IGenderEnum), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('location', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('language', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('bio', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('valid_proxy', sa.Boolean(), nullable=False),
    sa.Column('image_ids', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('platform', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('credentials', sa.JSON(), nullable=True),
    sa.Column('is_banned', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('organization_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['Organization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Account_id'), 'Account', ['id'], unique=False)
    op.create_table('Conversation',
    sa.Column('messages', sa.JSON(), nullable=True),
    sa.Column('fan_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('fan_url', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('status', sqlalchemy_utils.types.choice.ChoiceType(IConversationStatusEnum), nullable=True),
    sa.Column('account_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['Account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Conversation_id'), 'Conversation', ['id'], unique=False)
    op.create_table('Project',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sqlalchemy_utils.types.choice.ChoiceType(IStatusEnum), nullable=True),
    sa.Column('platform', sqlalchemy_utils.types.choice.ChoiceType(ITargetPlatformEnum), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Project_id'), 'Project', ['id'], unique=False)
    op.create_table('ChattingSettings',
    sa.Column('target_platform', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('target_handle', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('custom_cta', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('unmatch_after_handle', sa.Boolean(), nullable=False),
    sa.Column('messages_before_handle', sa.Integer(), nullable=True),
    sa.Column('begin_chatting_every', sa.Integer(), nullable=True),
    sa.Column('no_old_conversations_messages', sa.Integer(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('project_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['Project.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ChattingSettings_id'), 'ChattingSettings', ['id'], unique=False)
    op.create_table('Delays',
    sa.Column('response_delay', sa.Integer(), nullable=True),
    sa.Column('followup_delay', sa.Integer(), nullable=True),
    sa.Column('open_profile_delay', sa.Integer(), nullable=True),
    sa.Column('delay_before_message', sa.Integer(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('project_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['Project.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Delays_id'), 'Delays', ['id'], unique=False)
    op.create_table('GeneralSettings',
    sa.Column('block_images', sa.Boolean(), nullable=False),
    sa.Column('sleep_duration', sa.Integer(), nullable=True),
    sa.Column('random_naps', sa.Integer(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('project_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['Project.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_GeneralSettings_id'), 'GeneralSettings', ['id'], unique=False)
    op.create_table('Limits',
    sa.Column('daily_swipe_limit', sa.Integer(), nullable=True),
    sa.Column('daily_match_limit', sa.Integer(), nullable=True),
    sa.Column('daily_conversations_limit', sa.Integer(), nullable=True),
    sa.Column('daily_messages_limit', sa.Integer(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('project_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['Project.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Limits_id'), 'Limits', ['id'], unique=False)
    op.create_table('SwipeSettings',
    sa.Column('gender_preferences', sqlalchemy_utils.types.choice.ChoiceType(IGenderEnum), nullable=True),
    sa.Column('age_range_start', sa.Integer(), nullable=True),
    sa.Column('age_range_end', sa.Integer(), nullable=True),
    sa.Column('swipe_right_ratio', sa.Integer(), nullable=True),
    sa.Column('swipe_delay', sa.Integer(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('project_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['Project.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_SwipeSettings_id'), 'SwipeSettings', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_SwipeSettings_id'), table_name='SwipeSettings')
    op.drop_table('SwipeSettings')
    op.drop_index(op.f('ix_Limits_id'), table_name='Limits')
    op.drop_table('Limits')
    op.drop_index(op.f('ix_GeneralSettings_id'), table_name='GeneralSettings')
    op.drop_table('GeneralSettings')
    op.drop_index(op.f('ix_Delays_id'), table_name='Delays')
    op.drop_table('Delays')
    op.drop_index(op.f('ix_ChattingSettings_id'), table_name='ChattingSettings')
    op.drop_table('ChattingSettings')
    op.drop_index(op.f('ix_Project_id'), table_name='Project')
    op.drop_table('Project')
    op.drop_index(op.f('ix_Conversation_id'), table_name='Conversation')
    op.drop_table('Conversation')
    op.drop_index(op.f('ix_Account_id'), table_name='Account')
    op.drop_table('Account')
    # ### end Alembic commands ###
